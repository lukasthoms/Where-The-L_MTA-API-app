// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "GtfsRealtime.pb.h"
// @@protoc_insertion_point(imports)

@class Alert;
@class AlertBuilder;
@class EntitySelector;
@class EntitySelectorBuilder;
@class FeedEntity;
@class FeedEntityBuilder;
@class FeedHeader;
@class FeedHeaderBuilder;
@class FeedMessage;
@class FeedMessageBuilder;
@class NyctFeedHeader;
@class NyctFeedHeaderBuilder;
@class NyctStopTimeUpdate;
@class NyctStopTimeUpdateBuilder;
@class NyctTripDescriptor;
@class NyctTripDescriptorBuilder;
@class Position;
@class PositionBuilder;
@class TimeRange;
@class TimeRangeBuilder;
@class TranslatedString;
@class TranslatedStringBuilder;
@class TranslatedStringTranslation;
@class TranslatedStringTranslationBuilder;
@class TripDescriptor;
@class TripDescriptorBuilder;
@class TripReplacementPeriod;
@class TripReplacementPeriodBuilder;
@class TripUpdate;
@class TripUpdateBuilder;
@class TripUpdateStopTimeEvent;
@class TripUpdateStopTimeEventBuilder;
@class TripUpdateStopTimeUpdate;
@class TripUpdateStopTimeUpdateBuilder;
@class VehicleDescriptor;
@class VehicleDescriptorBuilder;
@class VehiclePosition;
@class VehiclePositionBuilder;


typedef NS_ENUM(SInt32, NyctTripDescriptorDirection) {
  NyctTripDescriptorDirectionNorth = 1,
  NyctTripDescriptorDirectionEast = 2,
  NyctTripDescriptorDirectionSouth = 3,
  NyctTripDescriptorDirectionWest = 4,
};

BOOL NyctTripDescriptorDirectionIsValidValue(NyctTripDescriptorDirection value);
NSString *NSStringFromNyctTripDescriptorDirection(NyctTripDescriptorDirection value);


@interface NyctSubwayProtoTxtRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
+ (id<PBExtensionField>) nyctFeedHeader;
+ (id<PBExtensionField>) nyctTripDescriptor;
+ (id<PBExtensionField>) nyctStopTimeUpdate;
@end

#define TripReplacementPeriod_route_id @"routeId"
#define TripReplacementPeriod_replacement_period @"replacementPeriod"
@interface TripReplacementPeriod : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRouteId_:1;
  BOOL hasReplacementPeriod_:1;
  NSString* routeId;
  TimeRange* replacementPeriod;
}
- (BOOL) hasRouteId;
- (BOOL) hasReplacementPeriod;
@property (readonly, strong) NSString* routeId;
@property (readonly, strong) TimeRange* replacementPeriod;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TripReplacementPeriodBuilder*) builder;
+ (TripReplacementPeriodBuilder*) builder;
+ (TripReplacementPeriodBuilder*) builderWithPrototype:(TripReplacementPeriod*) prototype;
- (TripReplacementPeriodBuilder*) toBuilder;

+ (TripReplacementPeriod*) parseFromData:(NSData*) data;
+ (TripReplacementPeriod*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TripReplacementPeriod*) parseFromInputStream:(NSInputStream*) input;
+ (TripReplacementPeriod*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TripReplacementPeriod*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TripReplacementPeriod*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TripReplacementPeriodBuilder : PBGeneratedMessageBuilder {
@private
  TripReplacementPeriod* resultTripReplacementPeriod;
}

- (TripReplacementPeriod*) defaultInstance;

- (TripReplacementPeriodBuilder*) clear;
- (TripReplacementPeriodBuilder*) clone;

- (TripReplacementPeriod*) build;
- (TripReplacementPeriod*) buildPartial;

- (TripReplacementPeriodBuilder*) mergeFrom:(TripReplacementPeriod*) other;
- (TripReplacementPeriodBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TripReplacementPeriodBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRouteId;
- (NSString*) routeId;
- (TripReplacementPeriodBuilder*) setRouteId:(NSString*) value;
- (TripReplacementPeriodBuilder*) clearRouteId;

- (BOOL) hasReplacementPeriod;
- (TimeRange*) replacementPeriod;
- (TripReplacementPeriodBuilder*) setReplacementPeriod:(TimeRange*) value;
- (TripReplacementPeriodBuilder*) setReplacementPeriodBuilder:(TimeRangeBuilder*) builderForValue;
- (TripReplacementPeriodBuilder*) mergeReplacementPeriod:(TimeRange*) value;
- (TripReplacementPeriodBuilder*) clearReplacementPeriod;
@end

#define NyctFeedHeader_nyct_subway_version @"nyctSubwayVersion"
#define NyctFeedHeader_trip_replacement_period @"tripReplacementPeriod"
@interface NyctFeedHeader : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasNyctSubwayVersion_:1;
  NSString* nyctSubwayVersion;
  NSMutableArray * tripReplacementPeriodArray;
}
- (BOOL) hasNyctSubwayVersion;
@property (readonly, strong) NSString* nyctSubwayVersion;
@property (readonly, strong) NSArray * tripReplacementPeriod;
- (TripReplacementPeriod*)tripReplacementPeriodAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NyctFeedHeaderBuilder*) builder;
+ (NyctFeedHeaderBuilder*) builder;
+ (NyctFeedHeaderBuilder*) builderWithPrototype:(NyctFeedHeader*) prototype;
- (NyctFeedHeaderBuilder*) toBuilder;

+ (NyctFeedHeader*) parseFromData:(NSData*) data;
+ (NyctFeedHeader*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NyctFeedHeader*) parseFromInputStream:(NSInputStream*) input;
+ (NyctFeedHeader*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NyctFeedHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NyctFeedHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NyctFeedHeaderBuilder : PBGeneratedMessageBuilder {
@private
  NyctFeedHeader* resultNyctFeedHeader;
}

- (NyctFeedHeader*) defaultInstance;

- (NyctFeedHeaderBuilder*) clear;
- (NyctFeedHeaderBuilder*) clone;

- (NyctFeedHeader*) build;
- (NyctFeedHeader*) buildPartial;

- (NyctFeedHeaderBuilder*) mergeFrom:(NyctFeedHeader*) other;
- (NyctFeedHeaderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NyctFeedHeaderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNyctSubwayVersion;
- (NSString*) nyctSubwayVersion;
- (NyctFeedHeaderBuilder*) setNyctSubwayVersion:(NSString*) value;
- (NyctFeedHeaderBuilder*) clearNyctSubwayVersion;

- (NSMutableArray *)tripReplacementPeriod;
- (TripReplacementPeriod*)tripReplacementPeriodAtIndex:(NSUInteger)index;
- (NyctFeedHeaderBuilder *)addTripReplacementPeriod:(TripReplacementPeriod*)value;
- (NyctFeedHeaderBuilder *)setTripReplacementPeriodArray:(NSArray *)array;
- (NyctFeedHeaderBuilder *)clearTripReplacementPeriod;
@end

#define NyctTripDescriptor_train_id @"trainId"
#define NyctTripDescriptor_is_assigned @"isAssigned"
#define NyctTripDescriptor_direction @"direction"
@interface NyctTripDescriptor : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsAssigned_:1;
  BOOL hasTrainId_:1;
  BOOL hasDirection_:1;
  BOOL isAssigned_:1;
  NSString* trainId;
  NyctTripDescriptorDirection direction;
}
- (BOOL) hasTrainId;
- (BOOL) hasIsAssigned;
- (BOOL) hasDirection;
@property (readonly, strong) NSString* trainId;
- (BOOL) isAssigned;
@property (readonly) NyctTripDescriptorDirection direction;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NyctTripDescriptorBuilder*) builder;
+ (NyctTripDescriptorBuilder*) builder;
+ (NyctTripDescriptorBuilder*) builderWithPrototype:(NyctTripDescriptor*) prototype;
- (NyctTripDescriptorBuilder*) toBuilder;

+ (NyctTripDescriptor*) parseFromData:(NSData*) data;
+ (NyctTripDescriptor*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NyctTripDescriptor*) parseFromInputStream:(NSInputStream*) input;
+ (NyctTripDescriptor*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NyctTripDescriptor*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NyctTripDescriptor*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NyctTripDescriptorBuilder : PBGeneratedMessageBuilder {
@private
  NyctTripDescriptor* resultNyctTripDescriptor;
}

- (NyctTripDescriptor*) defaultInstance;

- (NyctTripDescriptorBuilder*) clear;
- (NyctTripDescriptorBuilder*) clone;

- (NyctTripDescriptor*) build;
- (NyctTripDescriptor*) buildPartial;

- (NyctTripDescriptorBuilder*) mergeFrom:(NyctTripDescriptor*) other;
- (NyctTripDescriptorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NyctTripDescriptorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTrainId;
- (NSString*) trainId;
- (NyctTripDescriptorBuilder*) setTrainId:(NSString*) value;
- (NyctTripDescriptorBuilder*) clearTrainId;

- (BOOL) hasIsAssigned;
- (BOOL) isAssigned;
- (NyctTripDescriptorBuilder*) setIsAssigned:(BOOL) value;
- (NyctTripDescriptorBuilder*) clearIsAssigned;

- (BOOL) hasDirection;
- (NyctTripDescriptorDirection) direction;
- (NyctTripDescriptorBuilder*) setDirection:(NyctTripDescriptorDirection) value;
- (NyctTripDescriptorBuilder*) clearDirection;
@end

#define NyctStopTimeUpdate_scheduled_track @"scheduledTrack"
#define NyctStopTimeUpdate_actual_track @"actualTrack"
@interface NyctStopTimeUpdate : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasScheduledTrack_:1;
  BOOL hasActualTrack_:1;
  NSString* scheduledTrack;
  NSString* actualTrack;
}
- (BOOL) hasScheduledTrack;
- (BOOL) hasActualTrack;
@property (readonly, strong) NSString* scheduledTrack;
@property (readonly, strong) NSString* actualTrack;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NyctStopTimeUpdateBuilder*) builder;
+ (NyctStopTimeUpdateBuilder*) builder;
+ (NyctStopTimeUpdateBuilder*) builderWithPrototype:(NyctStopTimeUpdate*) prototype;
- (NyctStopTimeUpdateBuilder*) toBuilder;

+ (NyctStopTimeUpdate*) parseFromData:(NSData*) data;
+ (NyctStopTimeUpdate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NyctStopTimeUpdate*) parseFromInputStream:(NSInputStream*) input;
+ (NyctStopTimeUpdate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NyctStopTimeUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NyctStopTimeUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NyctStopTimeUpdateBuilder : PBGeneratedMessageBuilder {
@private
  NyctStopTimeUpdate* resultNyctStopTimeUpdate;
}

- (NyctStopTimeUpdate*) defaultInstance;

- (NyctStopTimeUpdateBuilder*) clear;
- (NyctStopTimeUpdateBuilder*) clone;

- (NyctStopTimeUpdate*) build;
- (NyctStopTimeUpdate*) buildPartial;

- (NyctStopTimeUpdateBuilder*) mergeFrom:(NyctStopTimeUpdate*) other;
- (NyctStopTimeUpdateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NyctStopTimeUpdateBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasScheduledTrack;
- (NSString*) scheduledTrack;
- (NyctStopTimeUpdateBuilder*) setScheduledTrack:(NSString*) value;
- (NyctStopTimeUpdateBuilder*) clearScheduledTrack;

- (BOOL) hasActualTrack;
- (NSString*) actualTrack;
- (NyctStopTimeUpdateBuilder*) setActualTrack:(NSString*) value;
- (NyctStopTimeUpdateBuilder*) clearActualTrack;
@end


// @@protoc_insertion_point(global_scope)
